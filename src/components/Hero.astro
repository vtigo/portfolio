---
import Image from "astro/components/Image.astro";
import AnansiWeb from "../assets/anansi_web_white.svg";

interface Props {
  title?: string;
  description?: string;
  ctaText?: string;
  ctaLink?: string;
}
const {
  title = "Olá! Eu sou o Tiago",
  description = "Desenvolvedor Full Stack criativo que navega nos limites do conhecido, transformando desafios complexos em oportunidades de inovação.",
  ctaText = "Conheça meu trabalho",
  ctaLink = "/projects",
} = Astro.props;
---

<section id="hero">
  <!-- <div class="gradient-bg"></div> -->
  <div class="fixed right-0 opacity-10">
    <Image src={AnansiWeb} alt="anansi_web" loading="eager"  />
  </div>
  <div class="description-container">
    <h2 class="text-sm text-zinc-500 animate-fade-in uppercase syne">
      {title}
    </h2>
    <div class="typewriter-container">
      <h1 class="text-white text-3xl md:text-5xl typewriter">
        <span id="typewriter-text"></span>
        <span class="cursor">|</span>
      </h1>
    </div>
    <!-- <div class="animate-fade-in button-wrapper">
      <Button text={ctaText} href={ctaLink} target="_blank" />
    </div> -->
  </div>
</section>

<script>
  // Typewriter effect with JavaScript for better control
  document.addEventListener("DOMContentLoaded", function () {
    const text =
      "Desenvolvedor Full Stack criativo que navega nos limites do conhecido, transformando desafios complexos em oportunidades para inovação.";
    const element = document.getElementById("typewriter-text");
    let i = 0;

    // Clear any existing text
    if (element) element.textContent = "";

    // Start typing effect after a short delay
    setTimeout(() => {
      const typingEffect = setInterval(() => {
        if (element && i < text.length) {
          element.textContent += text.charAt(i);
          i++;
        } else {
          clearInterval(typingEffect);
          // Show the button after typing completes
          const buttonWrapper = document.querySelector(".button-wrapper");
          if (buttonWrapper) {
            buttonWrapper.classList.add("show");
          }
        }
      }, 15); // Speed of typing
    }, 800); // Delay before typing starts
  });
</script>

<style>
 

  #hero {
    display: flex;
    width: 100%;
    min-height: 100vh;
    align-items: center;
    padding: 32px;
    box-sizing: border-box;
    position: relative;
    background-color: black;
    overflow: hidden;
  }

  .description-container {
    max-width: 80%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 24px;
    z-index: 1;
    position: relative;
  }

  .typewriter-container {
    width: 100%;
    margin: 0 auto;
  }

  .typewriter {
    color: white;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
    line-height: 1.4;
    word-wrap: break-word;
  }

  /* Cursor blinking animation */
  .cursor {
    display: inline-block;
    margin-left: 3px;
    animation: blink 0.7s infinite;
  }

  @keyframes blink {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }

  h1,
  p {
    color: white;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }

  h2.animate-fade-in {
    animation-delay: 0.3s;
  }

  .button-wrapper {
    opacity: 0;
  }

  .button-wrapper.show {
    animation: fadeIn 0.8s ease-out forwards;
  }
 
</style>
