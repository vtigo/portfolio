---
interface Props {
  text: string;
  href?: string;
  variant?: "primary" | "secondary" | "outline";
  size?: "small" | "medium" | "large";
  type?: "button" | "submit";
  className?: string;
  target?: string;
  onClick?: string;
}

const {
  text,
  href,
  variant = "primary",
  size = "medium",
  type = "button",
  className = "",
  target = "_self",
  onClick,
} = Astro.props;

const variantClasses = {
  primary:
    "bg-[#5A0A2F] text-white hover:bg-[#7B0A3D] transition-colors duration-200",
  secondary:
    "bg-[#0A0314] text-white hover:bg-[#1F0A2F] transition-colors duration-200",
  outline:
    "bg-transparent border-2 border-[#5A0A2F] text-[#5A0A2F] hover:bg-[#5A0A2F] hover:text-white transition-colors duration-200",
};

const sizeClasses = {
  small: "text-sm py-1 px-3",
  medium: "text-base py-2 px-4",
  large: "text-lg py-3 px-6",
};

const buttonClasses = `cursor-pointer font-medium rounded-md ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

{
  href ? (
    <a
      href={href}
      class={buttonClasses}
      target={target}
      rel={target === "_blank" ? "noopener noreferrer" : undefined}
    >
      {text}
      <slot />
    </a>
  ) : (
    <button type={type} class={buttonClasses} onclick={onClick}>
      {text}
      <slot />
    </button>
  )
}
